This malware was provided by hxxps://github.com/PacktPublishing/Malware-Analysis-Techniques in chapter 2. Thank you Dylan Barker!

1. 2. A host on the network is reporting issues with their PC after downloading a file. There aren't any new alerts in our Security Onion setup, so I am going to grab the packet capture from wireshark that
was running when the user downloaded the files. To speed things up, I will first isolate the users traffic, and send this pcap file to the standalone SO import setup, just to make
sure nothing was missed first time around due to network issues or otherwise. The SO import still doesn't generate any alerts, but it does provide some information. Our host (10.0.2.4) downloaded files from 
a github repo around the time of the incident. These files are encrypted with TLS, so SO was unable to detect them as possibly malicious. Moving back to wireshark, I am unable to export the downloads directly from the pcap
due to the encryption. I will pull a copy of the downloaded zip file directly off the host to analyze. 

With this zip file, I will use my REMnux linux machine to try and dig up more information. First, the file is listed as 8888888.png, and the SHA256 sum is a23ef053cccf6a35fda9adc5f1702ba99a7be695107d3ba5d1ea8c9c258299e4.
I will run this through VirusTotal and submit the sample to Hybrid-Analysis later, but I want to see what information I can dig up first.

Running this sample through clamscan returns a match for Locky ransomware. This is not an ordinary .png, and is likely the file causing trouble for our host. Using both 'file' and 'trid' identifies that this
is indeed a windows executable, not an image. Moving on to peframe, we can identify lots of interesting information. This malware is packed with anti-debug abilities, contains an abnormal r2 section (this sample
appears to be packed with Microsoft Visual cpp), and a certificate from LovelySoft. Pecheck lets me explore the sections, and the e_magic in the header is 0x5A4D, indeed a windows PE. There are many dll calls
in thie file that appear to be able to read, write, and enumerate files, gettickcount (analysis evasion), kill processes, explore directories, delete files, detect isdebuggerpresent, edit the registries, 
and execute a shell. This file has extensive capabilities and is able to dominate a windows host.

Searching for strings with the strings, xorsearch, and brxor.py immediately identifies the classic executable file start "!This program cannot be run in DOS mode." Xorsearch isn't very helpful in this case, but
strings is able to find an incredible amount of clues. Many of these strings match up with the dlls identified with pecheck and peframe. 

Now that I have done some basic investigation and confirmed that this does appear to be some version of ransomeware, I will submit it to Virus Total and Hybrid-Analysis. Virus Total determines this to be likely
qbot, but also suggests it could be locky. Hybrid Analysis also confirms this as ransomware, and gives a pretty thorough analysis of its capabilities, confirming what I have already found. 

Since I do not want to block access to Github with a domain or ip ban, the best course of action is to block this file hash with a new group policy. 
